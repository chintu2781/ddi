# -*- coding: utf-8 -*-
"""model_training

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TXom_QGfXjdgBr79VOp7Tp9_Eo37JuE0
"""

# src/model_training.py

import torch
import torch.nn as nn
import torch.nn.functional as F
from torch_geometric.nn import GCNConv
import joblib

class DDIPredictor(nn.Module):
    def __init__(self, num_drug_features, num_interaction_types):
        super(DDIPredictor, self).__init__()
        self.conv1 = GCNConv(num_drug_features, 128)
        self.conv2 = GCNConv(128, 64)
        self.fc = nn.Linear(64 * 2, num_interaction_types)

    def forward(self, x, edge_index, drug1_idx, drug2_idx):
        x = F.relu(self.conv1(x, edge_index))
        x = F.dropout(x, p=0.3, training=self.training)
        x = F.relu(self.conv2(x, edge_index))

        drug1_feat = x[drug1_idx]
        drug2_feat = x[drug2_idx]
        combined = torch.cat([drug1_feat, drug2_feat], dim=1)

        return torch.sigmoid(self.fc(combined))

def save_model(model, drug_encoder, interaction_encoder, model_path='models/'):
    joblib.dump(model, model_path + 'ddi_model.pkl')
    joblib.dump(drug_encoder, model_path + 'drug_encoder.pkl')
    joblib.dump(interaction_encoder, model_path + 'interaction_encoder.pkl')